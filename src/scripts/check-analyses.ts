import { supabaseAdmin } from "../lib/supabase";

async function checkAnalyses() {
  console.log("üîç Verificando an√°lises geradas...\n");

  try {
    const { data: analyses, error } = await supabaseAdmin
      .from("analyses")
      .select("*")
      .eq("user_id", "972c2801-bf56-429f-bf58-5325071d10a9")
      .order("created_at", { ascending: false })
      .limit(10);

    if (error) {
      console.error("‚ùå Erro ao buscar an√°lises:", error);
      return;
    }

    if (!analyses || analyses.length === 0) {
      console.log("‚ùå Nenhuma an√°lise encontrada");
      return;
    }

    console.log(`‚úÖ ${analyses.length} an√°lises encontradas\n`);

    for (const analysis of analyses) {
      console.log("‚îÄ".repeat(50));
      console.log(`üèÜ ${analysis.home_team} vs ${analysis.away_team}`);
      console.log(`üìä Mercado: ${analysis.market}`);
      console.log(`üí∞ Odd: ${analysis.odd_value}`);
      console.log(
        `üìà Prob. Estimada: ${(analysis.estimated_probability * 100).toFixed(
          1
        )}%`
      );
      console.log(
        `üí∏ Valor Esperado: ${(analysis.expected_value * 100).toFixed(2)}%`
      );
      console.log(
        `‚ú® Value Bet: ${analysis.is_value_bet ? "‚úÖ SIM" : "‚ùå N√ÉO"}`
      );

      if (analysis.recomendacao) {
        console.log(`üéØ Recomenda√ß√£o: ${analysis.recomendacao}`);
      }

      if (analysis.prob_1) {
        console.log(
          `üìä Prob. 1X2: Casa ${(analysis.prob_1 * 100).toFixed(
            1
          )}% | Empate ${(analysis.prob_x * 100).toFixed(1)}% | Visitante ${(
            analysis.prob_2 * 100
          ).toFixed(1)}%`
        );
      }

      if (analysis.prob_over25) {
        console.log(
          `‚öΩ Prob. Over 2.5: ${(analysis.prob_over25 * 100).toFixed(1)}%`
        );
      }

      if (analysis.prob_btts) {
        console.log(`ü•Ö Prob. BTTS: ${(analysis.prob_btts * 100).toFixed(1)}%`);
      }

      console.log("");
    }

    // Verificar quantas s√£o value bets
    const valueBets = analyses.filter((a) => a.is_value_bet);
    console.log("‚îÄ".repeat(50));
    console.log(
      `üéØ Resumo: ${valueBets.length}/${analyses.length} s√£o value bets`
    );

    if (valueBets.length > 0) {
      console.log("‚úÖ Value bets encontradas:");
      valueBets.forEach((vb) => {
        console.log(
          `   ‚Ä¢ ${vb.market} - ${vb.home_team} vs ${vb.away_team} (EV: +${(
            vb.expected_value * 100
          ).toFixed(2)}%)`
        );
      });
    }
  } catch (error) {
    console.error("‚ùå Erro geral:", error);
  }
}

checkAnalyses();
